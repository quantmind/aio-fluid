name: build

on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      PYTHON_ENV: ci
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: 7
      - name: Install dependencies
        run: make install
      - name: run lint
        run: make lint-test
      - name: build docs
        run: make docs
      - name: tests
        run: make test
      - name: upload coverage
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/coverage.xml
      - name: publish
        if: ${{ github.ref == 'refs/heads/main' && matrix.python-version == '3.12' && github.event.head_commit.message == 'release' }}
        run: make publish
      - name: publish-docs
        if: ${{ github.ref == 'refs/heads/main' && matrix.python-version == '3.12' }}
        run: make docs-publish
