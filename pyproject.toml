[tool.poetry]
name = "aio-fluid"
version = "1.1.2"
description = "Tools for backend python services"
license = "BSD"
authors = ["Luca <luca@quantmind.com>"]
readme = "readme.md"
packages = [
    {include = "fluid"}
]
[tool.poetry.urls]
"Repository" = "https://github.com/quantmind/aio-fluid"
"Issues" = "https://github.com/quantmind/aio-fluid/issues"

[tool.poetry.dependencies]
python = ">=3.11"
async-timeout = "^4.0.3"
inflection = "^0.5.1"
redis = {version = "^5.0.1", extras = ["hiredis"] }
pydantic = "^2.9.2"
yarl = "^1.15.5"
fastapi = {version = "0.115.2"}
uvicorn = {version = "0.32.0"}
aioconsole = {version = "0.8.0" }
sqlalchemy = {version = "^2.0.23", optional = true }
python-json-logger = {version = "^2.0.7", optional = true}
click = {version = "^8.1.7", optional = true}
rich = {version = "^13.7.1", optional = true}
aiohttp = {version = "3.10.10", optional = true}
alembic = {version = "^1.13.2", optional = true}
sqlalchemy-utils = {version = "^0.41.2", optional = true}
python-dateutil = {version = "2.9.0", optional = true}
asyncpg = {version = "^0.29.0", optional = true}
psycopg2-binary = {version = "^2.9.9", optional = true}
httpx = {version = "^0.27.2", optional = true}
prometheus-client = {version = "^0.21.0", optional = true}
typing-extensions = "^4.12.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
isort = "^5.9.3"
black = "^24.10.0"
pytest-cov = "^5.0.0"
mypy = "^1.12.0"
pytest-asyncio = "^0.24.0"
ruff = "^0.7.0"
types-redis = "^4.6.0.3"
types-python-dateutil = "^2.9.0.20240316"
python-dotenv = "^1.0.1"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.15"
mkdocs-macros-plugin = "^1.0.5"
mkdocs-redirects = "^1.2.1"
mkdocstrings = {version = "0.26.2", extras = ["python"]}

[tool.poetry.extras]
cli = ["click", "rich"]
db = ["click", "rich", "sqlalchemy", "sqlalchemy-utils", "alembic", "python-dateutil", "psycopg2-binary", "asyncpg"]
http = ["aiohttp", "httpx", "prometheus_client"]
log = ["python-json-logger"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "tests"
]
markers = [
    "flaky: marks test as flaky"
]

[tool.isort]
profile = "black"

[tool.ruff]
lint.select = ["A", "E", "W", "F", "I", "B", "N"]
line-length = 88
exclude = [
    "examples/db/migrations",
]

[tool.mypy]
warn_no_return = true
exclude = "examples/db/migrations"

[[tool.mypy.overrides]]
module = [
    "aioconsole.*",
    "sqlalchemy_utils.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disable_error_code = ["return"]
